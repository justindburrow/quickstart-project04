{"version":3,"sources":["components/Login.js","components/Register.js","components/CategoryMenu.js","components/QuestionList.js","components/AskQuestion.js","components/Dashboard.js","App.js","index.js"],"names":["Login","username","setUsername","useState","password","setPassword","error","setError","navigate","useNavigate","_jsxs","children","_jsx","onSubmit","async","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","token","localStorage","setItem","message","type","placeholder","value","onChange","target","required","style","color","Link","to","Register","success","setSuccess","ok","setTimeout","CategoryMenu","_ref","categories","onSelect","className","map","cat","onClick","id","name","QuestionList","category","refresh","questions","setQuestions","answerInputs","setAnswerInputs","useEffect","url","concat","sort","a","b","Date","createdAt","slice","fetchQuestions","q","_q$user","title","content","user","marginTop","marginBottom","answers","reverse","idx","_a$user","answer","questionId","answerId","getItem","Authorization","handleDeleteAnswer","_id","prev","_objectSpread","handleAnswerSubmit","handleInputChange","width","marginRight","handleDeleteQuestion","AskQuestion","_categories$","selectedCategory","onQuestionPosted","setTitle","setContent","setCategory","_categories$2","_categories$3","Dashboard","setCategories","setSelectedCategory","refreshQuestions","setRefreshQuestions","handleLogout","removeItem","r","App","Router","Routes","Route","path","element","Navigate","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d475b0c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\n\nfunction Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    const res = await fetch('http://localhost:5001/api/auth/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, password }),\n    });\n    const data = await res.json();\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('username', username);\n      navigate('/');\n    } else {\n      setError(data.message || 'Login failed');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n          required\n        /><br />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          required\n        /><br />\n        <button type=\"submit\">Login</button>\n      </form>\n      {error && <p style={{color:'red'}}>{error}</p>}\n      <p>Don't have an account? <Link to=\"/register\">Register</Link></p>\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\n\nfunction Register() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    const res = await fetch('http://localhost:5001/api/auth/signup', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, password }),\n    });\n    const data = await res.json();\n    if (res.ok) {\n      setSuccess('Registration successful! You can now log in.');\n      setTimeout(() => navigate('/login'), 1500);\n    } else {\n      setError(data.message || 'Registration failed');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Register</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n          required\n        /><br />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          required\n        /><br />\n        <button type=\"submit\">Register</button>\n      </form>\n      {error && <p style={{color:'red'}}>{error}</p>}\n      {success && <p style={{color:'green'}}>{success}</p>}\n      <p>Already have an account? <Link to=\"/login\">Login</Link></p>\n    </div>\n  );\n}\n\nexport default Register;","import React from 'react';\n\nconst CategoryMenu = ({ categories, onSelect }) => (\n    <div className=\"category-menu\">\n        <h3>Categories</h3>\n        <ul>\n            {categories.map(cat => (\n                <li key={cat.id}>\n                    <button onClick={() => onSelect(cat.id)}>{cat.name}</button>\n                </li>\n            ))}\n        </ul>\n    </div>\n);\n\nexport default CategoryMenu;","import React, { useEffect, useState } from 'react';\n\nconst QuestionList = ({ category, refresh }) => {\n    const [questions, setQuestions] = useState([]);\n    const [answerInputs, setAnswerInputs] = useState({});\n\n    useEffect(() => {\n        const fetchQuestions = async () => {\n            let url;\n            if (category) {\n                url = `http://localhost:5001/api/questions/category/${category}`;\n            } else {\n                url = `http://localhost:5001/api/questions/`;\n            }\n            const res = await fetch(url);\n            let data = await res.json();\n            if (!category) {\n                data = data\n                    .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n                    .slice(0, 5);\n            }\n            setQuestions(data);\n        };\n        fetchQuestions();\n    }, [category, refresh]);\n\n    // Handle answer input change\n    const handleInputChange = (questionId, value) => {\n        setAnswerInputs(prev => ({ ...prev, [questionId]: value }));\n    };\n\n    // Handle answer submit\n    const handleAnswerSubmit = async (questionId) => {\n        const answer = answerInputs[questionId];\n        if (!answer) return;\n        const token = localStorage.getItem('token');\n        await fetch(`http://localhost:5001/api/questions/${questionId}/answer`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: token\n            },\n            body: JSON.stringify({ answer })\n        });\n        setAnswerInputs(prev => ({ ...prev, [questionId]: '' }));\n        if (typeof refresh === 'function') refresh();\n    };\n\n    // Handle delete question\n    const handleDeleteQuestion = async (questionId) => {\n        const token = localStorage.getItem('token');\n        await fetch(`http://localhost:5001/api/questions/${questionId}`, {\n            method: 'DELETE',\n            headers: {\n                Authorization: token\n            }\n        });\n        if (typeof refresh === 'function') refresh();\n    };\n\n    // Handle delete answer\n    const handleDeleteAnswer = async (questionId, answerId) => {\n        const token = localStorage.getItem('token');\n        await fetch(`http://localhost:5001/api/questions/${questionId}/answer/${answerId}`, {\n            method: 'DELETE',\n            headers: {\n                Authorization: token\n            }\n        });\n        if (typeof refresh === 'function') refresh();\n    };\n\n    return (\n        <div className=\"question-list\">\n            <h3>{category ? \"Questions\" : \"Latest 5 Questions\"}</h3>\n            <ul>\n                {questions.map(q => (\n                    <li key={q._id}>\n                        <strong>{q.title}</strong>\n                        <p>{q.content}</p>\n                        <small>\n                            asked by {q.user?.username || 'Unknown'}\n                        </small>\n                        <div style={{marginTop: '10px', marginBottom: '10px'}}>\n                            <strong>Answers:</strong>\n                            <ul>\n                                {(q.answers || []).slice(-5).reverse().map((a, idx) => (\n                                    <li key={a._id || idx} style={{marginBottom: '6px'}}>\n                                        {a.answer}\n                                        <br />\n                                        <small>\n                                            answered by {a.user?.username || 'Unknown'}\n                                        </small>\n                                        <button\n                                            onClick={() => handleDeleteAnswer(q._id, a._id)}\n                                            className=\"delete-btn\"\n                                        >\n                                            Delete Answer\n                                        </button>\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                        <form\n                            onSubmit={e => {\n                                e.preventDefault();\n                                handleAnswerSubmit(q._id);\n                            }}\n                            style={{marginTop: '10px'}}\n                        >\n                            <input\n                                type=\"text\"\n                                placeholder=\"Your answer...\"\n                                value={answerInputs[q._id] || ''}\n                                onChange={e => handleInputChange(q._id, e.target.value)}\n                                style={{width: '70%', marginRight: '8px'}}\n                            />\n                            <button type=\"submit\">Answer</button>\n                        </form>\n                        <button\n                            onClick={() => handleDeleteQuestion(q._id)}\n                            className=\"delete-btn\"\n                        >\n                            Delete Question\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default QuestionList;","import React, { useState, useEffect } from 'react';\n\nconst AskQuestion = ({ categories, selectedCategory, onQuestionPosted }) => {\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [category, setCategory] = useState(selectedCategory || categories[0]?.id || '');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    useEffect(() => {\n        setCategory(selectedCategory || categories[0]?.id || '');\n    }, [selectedCategory, categories]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n        setSuccess('');\n        const token = localStorage.getItem('token');\n        const res = await fetch('http://localhost:5001/api/questions/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: token\n            },\n            body: JSON.stringify({ title, content, category })\n        });\n        const data = await res.json();\n        if (res.ok) {\n            setSuccess('Question posted!');\n            setTitle('');\n            setContent('');\n            setCategory(categories[0]?.id || '');\n            if (onQuestionPosted) onQuestionPosted();\n        } else {\n            setError(data.message || 'Error posting question');\n        }\n    };\n\n    return (\n        <form className=\"ask-question\" onSubmit={handleSubmit}>\n            <h3>Ask a Question</h3>\n            <input\n                type=\"text\"\n                placeholder=\"Title\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n                required\n            /><br />\n            <textarea\n                placeholder=\"Content\"\n                value={content}\n                onChange={e => setContent(e.target.value)}\n                required\n            /><br />\n            <select value={category} onChange={e => setCategory(e.target.value)}>\n                {categories.map(cat => (\n                    <option key={cat.id} value={cat.id}>{cat.name}</option>\n                ))}\n            </select><br />\n            <button type=\"submit\">Post Question</button>\n            {error && <p style={{color:'red'}}>{error}</p>}\n            {success && <p style={{color:'green'}}>{success}</p>}\n        </form>\n    );\n};\n\nexport default AskQuestion;","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport CategoryMenu from './CategoryMenu';\nimport QuestionList from './QuestionList';\nimport AskQuestion from './AskQuestion';\n\nconst Dashboard = () => {\n    const [username, setUsername] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState(null);\n    const [refreshQuestions, setRefreshQuestions] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const cats = [\n            { name: 'Birds', id: 'birds' },\n            { name: 'Dogs', id: 'dogs' },\n            { name: 'Cats', id: 'cats' },\n            { name: 'Rabbits', id: 'rabbits' }\n        ];\n        setCategories(cats);\n        setUsername(localStorage.getItem('username') || 'User');\n        setSelectedCategory(null); // <-- Show latest 5 questions from all categories by default\n    }, []);\n\n    const handleCategorySelect = (category) => {\n        setSelectedCategory(category);\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        navigate('/login');\n    };\n\n    return (\n        <div className=\"dashboard\">\n            <h1>Welcome to the Forum, {username}!</h1>\n            <button onClick={handleLogout}>Logout</button>\n            <div className=\"dashboard-content\">\n                <CategoryMenu categories={categories} onSelect={handleCategorySelect} />\n                <QuestionList\n                    category={selectedCategory}\n                    refresh={() => setRefreshQuestions(r => !r)}\n                />\n                <AskQuestion\n                    categories={categories}\n                    selectedCategory={selectedCategory}\n                    onQuestionPosted={() => setRefreshQuestions(r => !r)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport './styles/main.css';\n\nfunction App() {\n  const token = localStorage.getItem('token');\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route\n          path=\"/\"\n          element={token ? <Dashboard /> : <Navigate to=\"/login\" />}\n        />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}