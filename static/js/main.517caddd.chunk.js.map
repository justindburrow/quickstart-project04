{"version":3,"sources":["components/Login.js","components/Register.js","components/CategoryMenu.js","components/QuestionList.js","components/AskQuestion.js","components/Dashboard.js","App.js","index.js"],"names":["Login","_ref","setToken","username","setUsername","useState","password","setPassword","error","setError","navigate","useNavigate","_jsxs","children","_jsx","onSubmit","async","e","preventDefault","res","fetch","concat","process","method","headers","body","JSON","stringify","data","json","token","localStorage","setItem","message","type","placeholder","value","onChange","target","required","style","color","Link","to","Register","success","setSuccess","ok","setTimeout","CategoryMenu","categories","onSelect","className","map","cat","onClick","id","name","API_BASE","QuestionList","category","refresh","questions","setQuestions","answerInputs","setAnswerInputs","useEffect","url","sort","a","b","Date","createdAt","slice","fetchQuestions","q","_q$user","title","content","user","marginTop","marginBottom","answers","reverse","idx","_a$user","answer","questionId","answerId","getItem","Authorization","handleDeleteAnswer","_id","prev","_objectSpread","handleAnswerSubmit","handleInputChange","width","marginRight","handleDeleteQuestion","AskQuestion","_categories$","selectedCategory","onQuestionPosted","setTitle","setContent","setCategory","_categories$2","Dashboard","setCategories","setSelectedCategory","refreshQuestions","setRefreshQuestions","handleLogout","removeItem","r","App","Router","Routes","Route","path","element","Navigate","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.517caddd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\n\nconst API_BASE = process.env.REACT_APP_API_URL || \"http://localhost:5001\";\n\nconst Login = ({ setToken }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n        const res = await fetch(`${API_BASE}/api/auth/login`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password }),\n        });\n        const data = await res.json();\n        if (data.token) {\n            localStorage.setItem('token', data.token);\n            localStorage.setItem('username', username);\n            setToken(data.token); // <-- This triggers App to re-render\n            navigate('/');\n        } else {\n            setError(data.message || 'Login failed');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Login</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                    required\n                /><br />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    required\n                /><br />\n                <button type=\"submit\">Login</button>\n            </form>\n            {error && <p style={{color:'red'}}>{error}</p>}\n            <p>Don't have an account? <Link to=\"/register\">Register</Link></p>\n        </div>\n    );\n};\n\nexport default Login;","import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\n\nconst API_BASE = process.env.REACT_APP_API_URL || \"http://localhost:5001\";\n\nconst Register = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n        setSuccess('');\n        const res = await fetch(`${API_BASE}/api/auth/register`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password }),\n        });\n        const data = await res.json();\n        if (res.ok) {\n            setSuccess('Registration successful! You can now log in.');\n            setTimeout(() => navigate('/login'), 1500);\n        } else {\n            setError(data.message || 'Registration failed');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Register</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                    required\n                /><br />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    required\n                /><br />\n                <button type=\"submit\">Register</button>\n            </form>\n            {error && <p style={{color:'red'}}>{error}</p>}\n            {success && <p style={{color:'green'}}>{success}</p>}\n            <p>Already have an account? <Link to=\"/login\">Login</Link></p>\n        </div>\n    );\n};\n\nexport default Register;","import React from 'react';\n\nconst CategoryMenu = ({ categories, onSelect }) => (\n    <div className=\"category-menu\">\n        <h3>Categories</h3>\n        <ul>\n            {categories.map(cat => (\n                <li key={cat.id}>\n                    <button onClick={() => onSelect(cat.id)}>{cat.name}</button>\n                </li>\n            ))}\n        </ul>\n    </div>\n);\n\nexport default CategoryMenu;","import React, { useEffect, useState } from 'react';\n\nconst API_BASE = process.env.REACT_APP_API_URL || \"http://localhost:5001\";\n\nconst QuestionList = ({ category, refresh }) => {\n    const [questions, setQuestions] = useState([]);\n    const [answerInputs, setAnswerInputs] = useState({});\n\n    useEffect(() => {\n        const fetchQuestions = async () => {\n            let url;\n            if (category) {\n                url = `${API_BASE}/api/questions/category/${category}`;\n            } else {\n                url = `${API_BASE}/api/questions/`;\n            }\n            const res = await fetch(url);\n            let data = await res.json();\n            if (!category) {\n                data = data\n                    .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n                    .slice(0, 5);\n            }\n            setQuestions(data);\n        };\n        fetchQuestions();\n    }, [category, refresh]);\n\n    const handleInputChange = (questionId, value) => {\n        setAnswerInputs(prev => ({ ...prev, [questionId]: value }));\n    };\n\n    const handleAnswerSubmit = async (questionId) => {\n        const answer = answerInputs[questionId];\n        if (!answer) return;\n        const token = localStorage.getItem('token');\n        await fetch(`${API_BASE}/api/questions/${questionId}/answer`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: token\n            },\n            body: JSON.stringify({ answer })\n        });\n        setAnswerInputs(prev => ({ ...prev, [questionId]: '' }));\n        if (typeof refresh === 'function') refresh();\n    };\n\n    const handleDeleteQuestion = async (questionId) => {\n        const token = localStorage.getItem('token');\n        await fetch(`${API_BASE}/api/questions/${questionId}`, {\n            method: 'DELETE',\n            headers: {\n                Authorization: token\n            }\n        });\n        if (typeof refresh === 'function') refresh();\n    };\n\n    const handleDeleteAnswer = async (questionId, answerId) => {\n        const token = localStorage.getItem('token');\n        await fetch(`${API_BASE}/api/questions/${questionId}/answer/${answerId}`, {\n            method: 'DELETE',\n            headers: {\n                Authorization: token\n            }\n        });\n        if (typeof refresh === 'function') refresh();\n    };\n\n    return (\n        <div className=\"question-list\">\n            <h3>{category ? \"Questions\" : \"Latest 5 Questions\"}</h3>\n            <ul>\n                {questions.map(q => (\n                    <li key={q._id}>\n                        <strong>{q.title}</strong>\n                        <p>{q.content}</p>\n                        <small>\n                            asked by {q.user?.username || 'Unknown'}\n                        </small>\n                        <div style={{marginTop: '10px', marginBottom: '10px'}}>\n                            <strong>Answers:</strong>\n                            <ul>\n                                {(q.answers || []).slice(-5).reverse().map((a, idx) => (\n                                    <li key={a._id || idx} style={{marginBottom: '6px'}}>\n                                        {a.answer}\n                                        <br />\n                                        <small>\n                                            answered by {a.user?.username || 'Unknown'}\n                                        </small>\n                                        <button\n                                            onClick={() => handleDeleteAnswer(q._id, a._id)}\n                                            className=\"delete-btn\"\n                                        >\n                                            Delete Answer\n                                        </button>\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                        <form\n                            onSubmit={e => {\n                                e.preventDefault();\n                                handleAnswerSubmit(q._id);\n                            }}\n                            style={{marginTop: '10px'}}\n                        >\n                            <input\n                                type=\"text\"\n                                placeholder=\"Your answer...\"\n                                value={answerInputs[q._id] || ''}\n                                onChange={e => handleInputChange(q._id, e.target.value)}\n                                style={{width: '70%', marginRight: '8px'}}\n                            />\n                            <button type=\"submit\">Answer</button>\n                        </form>\n                        <button\n                            onClick={() => handleDeleteQuestion(q._id)}\n                            className=\"delete-btn\"\n                        >\n                            Delete Question\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default QuestionList;","import React, { useState, useEffect } from 'react';\n\nconst API_BASE = process.env.REACT_APP_API_URL || \"http://localhost:5001\";\n\nconst AskQuestion = ({ categories, selectedCategory, onQuestionPosted }) => {\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [category, setCategory] = useState(selectedCategory || categories[0]?.id || '');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    useEffect(() => {\n        setCategory(selectedCategory || categories[0]?.id || '');\n    }, [selectedCategory, categories]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n        setSuccess('');\n        const token = localStorage.getItem('token');\n        const res = await fetch(`${API_BASE}/api/questions/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: token\n            },\n            body: JSON.stringify({ title, content, category })\n        });\n        const data = await res.json();\n        if (res.ok) {\n            setTitle('');\n            setContent('');\n            setSuccess('Question posted!');\n            if (typeof onQuestionPosted === 'function') onQuestionPosted();\n        } else {\n            setError(data.message || 'There was a problem posting your question.');\n        }\n    };\n\n    return (\n        <form className=\"ask-question\" onSubmit={handleSubmit}>\n            <h3>Ask a Question</h3>\n            {error && <div style={{ color: 'red' }}>{error}</div>}\n            {success && <div style={{ color: 'green' }}>{success}</div>}\n            <input\n                type=\"text\"\n                placeholder=\"Title\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n                required\n            />\n            <textarea\n                placeholder=\"Your question...\"\n                value={content}\n                onChange={e => setContent(e.target.value)}\n                required\n            />\n            <select\n                value={category}\n                onChange={e => setCategory(e.target.value)}\n                required\n            >\n                {categories.map(cat => (\n                    <option key={cat.id} value={cat.id}>{cat.name}</option>\n                ))}\n            </select>\n            <button type=\"submit\">Post Question</button>\n        </form>\n    );\n};\n\nexport default AskQuestion;","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport CategoryMenu from './CategoryMenu';\nimport QuestionList from './QuestionList';\nimport AskQuestion from './AskQuestion';\n\nconst Dashboard = () => {\n    const [username, setUsername] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState(null);\n    const [refreshQuestions, setRefreshQuestions] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const cats = [\n            { name: 'Birds', id: 'birds' },\n            { name: 'Dogs', id: 'dogs' },\n            { name: 'Cats', id: 'cats' },\n            { name: 'Rabbits', id: 'rabbits' }\n        ];\n        setCategories(cats);\n        setUsername(localStorage.getItem('username') || 'User');\n        setSelectedCategory(null); // <-- Show latest 5 questions from all categories by default\n    }, []);\n\n    const handleCategorySelect = (category) => {\n        setSelectedCategory(category);\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        navigate('/login');\n    };\n\n    return (\n        <div className=\"dashboard\">\n            <h1>Welcome to the Forum, {username}!</h1>\n            <button onClick={handleLogout}>Logout</button>\n            <div className=\"dashboard-content\">\n                <CategoryMenu categories={categories} onSelect={handleCategorySelect} />\n                <QuestionList\n                    category={selectedCategory}\n                    refresh={() => setRefreshQuestions(r => !r)}\n                />\n                <AskQuestion\n                    categories={categories}\n                    selectedCategory={selectedCategory}\n                    onQuestionPosted={() => setRefreshQuestions(r => !r)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;","import React, { useState } from 'react';\nimport { HashRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport './styles/main.css';\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/login\" element={<Login setToken={setToken} />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route\n          path=\"/\"\n          element={token ? <Dashboard /> : <Navigate to=\"/login\" />}\n        />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}